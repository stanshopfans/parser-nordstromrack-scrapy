def make_proxy_generator(path_to_proxies_file):
    with open(path_to_proxies_file, 'r') as file:
        lines = file.read().split('\n')

    def convert_line(line):
        auth = line.split(':')[-2:]
        auth = ":".join(auth)
        host_port = line.split(':')[0:2]
        host_port = ":".join(host_port)

        return f'http://{auth}@{host_port}'

    proxies = list(map(convert_line, lines))
    while True:
        for proxy in proxies:
            yield proxy


proxies_generator = make_proxy_generator('Webshare 1000 proxies.txt')

tokens = [
    'b;AKKTWbh9vMinFP2iiWtjqoWAMSGdEWT5g-rl5bqmqyDI3bwdIzd58Cvxhsor4p-IG9QlsHTULGrbVOhBmFTtuhDJxijMMdp0UzpB4rjZCaFw73nOf6cqIXcC0Iqu3ZR8btHS9m1mzwbfN2xMlCDNqCgOCMQMFwYu_ISQvJMJkkdFnKfm2bu2Xw7AuwMgf_aFuDu-RFadH0_xaL3LF7AJzJZW-V9DurrFkubsRYjJwLW-90vu2THAo0AW3J9bZPDSARZdweJRoO10hEZOYKO2u6y3dK5gTv22XyXrIYcgA4MGRGWrMgTQdGxlnWUKTchCKXGtzlWhp-ZbCuZ-fg-rvf0aWMEPK3OVL0K64m2qGyPr7tH8vfUhAsNd8oGwlOQtMNTC8dngvsRQ8dzQwR4kFFgJa3j1r_Yy6FTfLc9LXj7Bp81vITXZPBbx1AdIfwOEHU7p8g67T_NneuumLIIVZB7B4tgmL-Zr-tLa7WSUpcAGHEF-oZVKXcT3xUCY6D0wXjoHR-15W3NduOFpWE_z2NYKLtCjHD7fh4yK-nDqH1o2euXe84C6HZaPXtxmXfOebUUIxHnLFkIeLdzcSQQxcqU2Z8OWf5foW0kvy-LJlI270wGsJN_duBnTqsoUh8sEFzXTRCJBlfp2Otx0WTaIwav5f5SSdnS1jfy-2uUMAIkmJqxnjzq-1otMN8l_LFE6t9Zex4Wyf28eJcZF-R02ehi2iiw2N0y_5vpSARhrBeoOVGq4dQ3KhtEcqARiOftr_JNRl7EFuKNu6Edgv-hHZst7imcW79LTOncQlrazZGC0SneAknXummgJCLseW8Mw3NymxuWIrC2u6RsMcG1OMiTMGrU9i6MHOKg=;c1JB71RVhxt9V9q9WWavU8iiATpd8dnbQnj4EkIw_pg=',
    'b;FlHUVn1EOg2vsw0bj6FfLAlojAHcJbssWX8bp-krBG23lyqAascKlegYqJ4a76asJjha1JaDvaRQipuf_NjLsGtdfMzRpowqnYFAEwO_r-LE_m7rgCHw5dLqOzAi4UzbLTCa8ce21-dZDZh1MdiOShwhqY57P35MyYpv8Ko3SdAiaGb2ZIfToLFhfrptGNhB8zdAFz4pgmY0s960iAPx68QKZA9NvtgvyjFNlWIGjG7e5I38exsN8PioTt-TcaCNK4vga0N9tBwldMAFx0VDwtXVXf5nFdJxux7DiL9KjKBGSyrzhHNvTGqRzbNX4P8QkcYR488SS2uUxE1C_29sLpUcXLlfWUohXFEaoTy7NGDXl_rbiGt233aVxRKydJzqB6GgDr8dIDB3wG59lQvRGwrHbPgtvAWLzigS6IsgmwH1rgFbI9TCwSGZChIcVNaE0FxwVWElQpxa2TYBr1GTsw58BSv_edvXTqU8NbfO5oGm04M3BMnfARXsjE_FcEN1vmUVWDbBx5uKWKB22qlbJjbcyhUgL7FT_TsJEzy1DtAmBFgp7UHhe8w17fVcJONCR5OdJ7Ggte8g8vjJvRkePraQcDfEEHfhnIJrNDL_f8GrACBPwlzInn1fhi_bJ8_Z9T2deda4YNuvpa453fXUVs3RCbcFtE2aObv2C-pR5FC_INcbWzaN_PBi6nnG6sJTxbr_vtuW61TR0D1UCFho8IvPswS0PUNSFoBbj_dsQAYQW1CU9nZ18xtSG-g6y5uNwCZmyYMd9XosWVPjj7P2zTuujL68pLOnQhu3C8nU4JNNY6w5771VR1SgmH-T_waA_5BTI37A6M2WQpeQTd7P_Cc=;waTWYzuq-EJJwS8PrABuB3Ezpfl2yznWjFX5RpZkdNg='
    # # original
    # 'b;fpfaG45E3eCbjjpuGTx7XDk7kbfz8IGAHk_dFKZrhPooOxr_jC8QWkQ5kiaKKIxSpWZse6I7Ad4oWM0pSKS64IjW0bTbWf3w2_Z5rMnH6rSqvsbdMr73qofXKvdarO855YVDNHTPKdmOKWdGeLCnotT9XkbpSCnnRzOd1kM4DU9MdHQwIDaHsAGGIjCT4Jh1L9xppDrI--DQgJtmALqfooH0SpFsjHfprZPp_voNp4sZ-GQEMuX3GiIWhisIfR0Mh463AKIrCVwMXcTD9GEoeSXyHb-rSZFxmiU4vSdXSbotGhd7M1FPSXr8k-cx1zes9asksG96stofVgjXblnbhRxs4kPPRUIH-B19UBNQPfVEfFwxqyUf_LRyHkRqLqs1qCCQlsYjPrWYlRcBP5cWOm8a4FarPtQN8ThcDcXfb9vvyJWKRy_TSkjI0dPiw-619KlIAWKoDW7sFgfanse1L-DEW3zxtFbrcyPKAhxlMhQPy4qE2RnbqmnbPA0iHbS3Z_wENuhoZzPisFm3xxWwBiSuFXDLjzIjHM6dqS6--ChULT3jh7Fi9RG-h8BT5YNfM4UpzyeVbu9FsmK4_A7qn2enUJlcS6k-DxiicnFccyBwIYk4CZRs0hPTZQ9AQ86AMZoUg_pcAqXKoRc6Rlz0a9qp8m7-d-3-DaCqxXIfRap5zSupZt2TtfDmI4Tgpuje7MPiJCf8pg6rJeCUeb3MTHN5MDOYUDS80CUz_mT7VmKLsB2m55_bmtFkXgUxStfjEYCAZY7CdLsLfKu37YLQmaGZWndQEfp6I5_pK80GZbyEofwBd2n44uFzXEIzLAmiDk2dN9-d_T0vp2v9POw=;F2CbiCsyJbTNiSgUQjIlnMraGvQLmy8_qAYqb-V3-Kc=',
    # # muslim
    # 'b;BrPDXwV-4ayyXxhFJabeFJnorU7f9xMOFuqxCUAojXVEqg0cSktaK7WDsl_fZnjsUUYCaTL3l74IL-r9w5zd96O8qpi4MUJGp9m7_pmM5_BltbCqjh5VDdZqFTJA86CzofQojR9vq-kW9YRPiD8CU7qTLHpDjpyiu6vdf0idzMuSbql2JkqV1v766HMjxdJ2tXkoaM89ILQNw8bFUU08y_AyRadTlmZQ2KYDJIjVS_Iva_BJFE_woQ69M5Sk-v74FhC4bQ94BsupK5SRiOtpQL0jP33KfYDR0VROfFugarUS_VBL8zkQvpopo0ygyq6bsEDvvfG3tm-fT6nTk9DeJHmrAe0Z4A9xOBmsdh-JFtsVUEeeUQ5RVTyxGoamj8TjSQ_1v1CSZGexThBgIz3kfhxrWLagiLReK84Wd3IBPar-tYlMkx69Gk_ZzomOWftMI7pmLclChECygmQrSbVabJMGQMiStQCw7nl2ijMf6urfn_RjQG1YbbJ8y4J7YK03VItjJHiAZSdx9Olv3RcnTmJpeCIUi1WVo4k9fhHrFHyB1e5F7vwGqeVQGsTLfUZDchkrmYVoxckxaHhhFAIwIqAUoyeDaamGOmiVVw6paVsLt0y5Ff6yTzHsEkZBd4YpTC9AJFgfxIgUgC9NWhOVIeQJWMOKOZ1Dq0wNpZFh9ZssmcBliNy-mwppsQAuy2PzKdRKyb1qvyvenqmdZbFEs_AM3MxbuGKfOt6GDoC5PHkv0izN34U6prUnhkssth2Fw30WmlNv-nPJwJGtni56IyZVFUAbjWZ9V5-iFLhxr4ECfzBc3gKzPnot2y0sNk4QXa0fiLIUc7dubFA=;CVz9E5xSg0tn2USNfRWbY2jzhKmfJW2w0DJnEz9-PZ8=',
    # # backup
    # 'b;aRUJloin7bJuh2E08mAtih8pGfCpe6fBbzODQBtPR9qgjY6K2E_OdqTVdxjlpHH-m2UIQy-lvqswUUS3ohR4PjgS0db-Lie9D2FDKcoyFbjiNIB-uSfRDWORwootYI0oKDfvDkMk0WIleWS51St39kxx45q24a0EMPwzZfADX6DrDEPSmrOpBS5jsn8cpFB0eCyNO9y6Ww209WYZg3QIKfMQIXDchpCuyYgHkGgjG6r5mACKxm7EpTZYpYZ_7zk8J0V1MpN4NF7lfyBsDJY3-uUuJhW84HyUGNKwseTRyGvhFnMyBHx9H1FUlcu4xS9gRHD_zGFuu0XgLPgzs-e9dtKSpk9kBC_sr4NJKobLddEy_8eoRR4nHlVKe2tXeqSlz0Smg-84hVq41xnJVIlqoOkrQRA43bN3Q1a-0xb4CG84a2j7aKWFx5EzKvIO_j9vSQZR7dWG_pph_F1y9n9iwBy0uM1_DPIGSxopjIct9wpYEdVFfQPNRZ30--vHVqK1ZJ5zIwjJOEBVZ2F1iPeDiFxvKmXtcoOys42O-qJ4Xka1OyG8b9jfwQ1xNWT4RLVsCxC-ks3dNy2igjqEhbssc8rajpYSFhk7eaSJFZYzu3EFopzvFoiF3KNlP02Ca4y3dx6zK4TcTtTUaFRV60ZZpIAyGU20pJdkq_pnr_COgJeUsXBhRKcBnrxOe9uF_ZqhEeKtL7pZYDVoTUClqqTVDBWI8x2rRCZI4FjOpesFPLbsU1oY--y7AL6xC6ZCAV8ADVXVvJGFYJOAJxPt-sXC_ueGJ03WWaL36EV278rHb2jrBvdmtYcotW8C9YF3FvtjJoNWCmCHIY7w-kw=;eGhzL1-EWmSE09ne5OX00c4dhC3tH89LkShDE4ZV11Y=',
    # 'b;N1HiMiZFogu6Tdy8g7NSmJucqWqkI_QoaNj8D6B8EpahC9RTChDqGBrsPBGlbKBbHioEML0MyIc3YMbGQXIUJgfk2YCx9naO7m2MQD2A2gTfdz88B3-PW8pxMBvxIl0MKmY-LdqxL0TjPmX9EflmDMuFhTcKnAsskbyysAMKItoDjDT6hy4wB5U9Ik8pTf2jjJH1mP3hx02VA4j6TWqnPGIt3KhRM-Epe0NgTT05TLEAZTjTpBPbIMVBRvAaORqfJOG8MPKAEcGsbcXUdr25XTKAxsgeRJ1VG1afYm1soo4kP05N1-ZPDi9Y5MFU-M_dwimRFdiX0kjSxxcj7enABECEj4Qlp-FNeW4WNBa96ioU7AhS7IZKuDIKjl3hWdveiJMlOpoVEANVNeRLGinw-kqiPfVve-dIJNU-o5-Y31A7fxxmeFX2osRH12fGU4JXNCJblmWHibdwfmbWtQ1avIdpJyqJFwRSCzDe8sV-YLK5NUN4BiNeQFtGFdfAHjVrtKisoAuCYptKvBo8mJzjUY2Dma2KRA8RxgwaEZijmEuv6-ajWI1akCQ-HlJTUX8RA-fZtLJyfg1-3WiHRO_zPjxHe3LUxMgJ5OP6D9QACLdYXNyPcoI2xsqYnqLk89rektYXVYrMV_OUnE1L5HcAi6LqjdzFkFnzn9Nf5xhZIoIPa9Cn7u-j7Ut8Ec1AEiizsay0WkYEkNYgieDYkjf7Nsx0Nv--s5HhTmojZ1RtTVm8EqrhrQ_NAOTSpoZ_NHxpHqPINikxjDmTeD13AU1Z60anWiIjC1rFPcczoaDIpBWUimElDzZQMn2xYG1-3KW0TL-58OGvv6chcRot;_Gpb7H074ptN2RdkDOVaR0kUz4vXGG_ObGtw2aLl5rk=',
    # 'b;ZN-7pGolujjLhGQF0C5DvRmsDAgMNXPwgYIc3xMSKHViItYLtTUtFzDVYSSCoulpjOvd1YDKg0tYCFXT85h9pdE0iZM9jors7lwLl6W9Q4S85qMUkXz1ASXYdZPyqGpqH-uLLBJNL8c1vo8MQTp6OYRuIH-ELvCkVdRrSuvW9A-jnno3BIhyfmxXa7-kMxBLALjWanLcfGVmDZnax6VV29a-31eUtI8mQYBwg6u36RnxbPAyjjE-36Xig_Lefkh5Ls-pLM9goYJiRA39t6EF77NIJuWTZ4IEIrwpeBq7YG3qpFUm7EdRB1eLmteFE1e_H6RtV_Td0LUSq1DvM8px0-3YbkohKd4kk-0FPDTwvT9tTh4dtlgHuwIQzRn_eyTML6Agoh-4FUwcbK93TGjeLU6p7SidmbyzlNpIGzDQ2zv5fnAchHfzN7yTy9H9s_PxCPEJ5n4unPhGVMR-tBlFkjTv13-f2yJGe7Pg_KS7Eqe222wQFYT4rh9MrPgwb3NfdjLmoQmX-jP-OaxkVBBf3A7oH9FYnrbNFmjd16m2a-r071ROWANAKsmvarWQp1O3wxqLf8y51Mt6epYey7CfVStSzD-5tw2dB_vhAArtuGMvzLRLwDDz8umPK8RNwlxjnCwyqOI1d0fGwHKwxWz1j2-6lVF9PvbG1N-Wxg_5MLnOuKB5SBp_1DSNEHDwSTMuk9_Xz32LIvAohzTyLiH72N9HwkGiPWc6ZgGYzGrf6Dt3RhT-CoBNFYkQAH62sMG6tqVWl0mvfMiUWRZCmCnBZiAJ4smjY60KAJnkXOR7rgpaFL2P7rN4gSl2LfmAWgL19xjiHmEbMK1Wneau;w34m9A9gxQZQ2ZlfZ7KSxBo04P2GT42wKyn-CwMZWFI=',
    # 'b;5lJzKflAGsk_OuPD4CDRtqMz9mgBZsOeD-IK54J03RQSFeKwSmm5-cPLjrb9-V2jOCyWz1WkCEPAAOSRUEhPJdg7z5lqBPyRtxlJJWlHqPy9gtr49PKBxPUO4V-GquJDVUqqDeVrm_YDWe_1I8gltbw4RT9yS98I2Rqovjvzn8ARL9Og3k7wJZPeyPKlE1-_oLu-Ux7crRr-3BNN7RK9QOTZab8U1gB6Vz8vljnV8xN2g-LGf7TbdfoOdsne9hxfpsa3QG43R7_HzuPRcyMFe-MjQIaM82Zc-qojCOW5gTENWoqqgUHP7huAHMVSvpinL_nRvqXZ39mmf_ieVomgv4Ycjsom61FuR243qHw0fqSemy8g84dTMLcm67KS_fgHdMf0RhnLXHOtXu_KVnm6Seiu6cS3siuVX76Wj2EVwhe0l5a7WJg6dnHq6A5ZFkrKOMBLylD6x9A-Uu0Z3Ld_jO3d6iwCcLLBl7l4MSqxqF8mcXI4J4jMU8T7Gn_cl2Zl19mt9JnxvfOxC99zjKnzB2oC5a64WSigbWVtTFzZPzW2kFNjcJz3pIHE3Hf3PBOFRMwIGAqAPqLKX6pqUxQoj2SfjjxOEamxK5CWGZmmO2foNtwFGSYldl2N67KffnQHsSwnfqW6H6QwgoTezG7nvaSmwgG1pYMJoJ8n_1a3LJsNcOG_N4SuhfAf3mUi1pQdMWXUFoLnM1DTDB1PWVwPHKQWD3PrBkz61RYTDvx45wMvQqcMSCKX7wVXe49e6sJ-SQ_FQdJjrAzGGk4CJbzIjg5rNyM7sMPz6FSC5_r2p5vuaAEKpStsEwHaczPMhSm0reKNK56HcNfu9Q0=;qQ4bg7uQyU1zy1tPKG7x5cs596KWYqaKlYlAcM9akjI=',
]
def make_tokens_generator(tokens):
    new_text = []
    with open('nord-key.txt', 'r') as file:
        tokens = file.read()

    for item in tokens.split('\n'):
        item = item.strip()
        if item:
            new_text.append(item)
    while True:
        for token in new_text:
            yield token

tokens_generator = make_tokens_generator(tokens)